# Makefile.in generated by automake 1.15 from Makefile.am.
# src/common/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/oceanbase
pkgincludedir = $(includedir)/oceanbase
pkglibdir = $(libdir)/oceanbase
pkglibexecdir = $(libexecdir)/oceanbase
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = -fprofile-arcs -ftest-coverage
#am__append_2 = -lgcov
subdir = src/common
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libcommon_a_AR = $(AR) $(ARFLAGS)
libcommon_a_LIBADD =
am__objects_1 = base_main.$(OBJEXT) \
	batch_packet_queue_thread.$(OBJEXT) bloom_filter.$(OBJEXT) \
	dlist.$(OBJEXT) file_directory_utils.$(OBJEXT) \
	file_utils.$(OBJEXT) futex_sem.$(OBJEXT) \
	ob_fifo_allocator.$(OBJEXT) ob_packet_lighty_queue.$(OBJEXT) \
	murmur_hash.$(OBJEXT) ob_array_lock.$(OBJEXT) \
	ob_base_client.$(OBJEXT) ob_base_server.$(OBJEXT) \
	ob_bypass_task_info.$(OBJEXT) ob_cache.$(OBJEXT) \
	ob_cell_array.$(OBJEXT) ob_check_runnable.$(OBJEXT) \
	ob_client_helper.$(OBJEXT) ob_client_manager.$(OBJEXT) \
	ob_client_proxy.$(OBJEXT) ob_client_wait_obj.$(OBJEXT) \
	ob_cluster_mgr.$(OBJEXT) ob_common_param.$(OBJEXT) \
	ob_common_rpc_stub.$(OBJEXT) \
	ob_compact_cell_iterator.$(OBJEXT) \
	ob_compact_cell_util.$(OBJEXT) \
	ob_compact_cell_writer.$(OBJEXT) ob_compose_operator.$(OBJEXT) \
	ob_composite_column.$(OBJEXT) ob_cond_info.$(OBJEXT) \
	ob_counter.$(OBJEXT) ob_crc64.$(OBJEXT) ob_cur_time.$(OBJEXT) \
	ob_decimal_helper.$(OBJEXT) ob_direct_log_reader.$(OBJEXT) \
	ob_onev_log.$(OBJEXT) ob_encrypt.$(OBJEXT) \
	ob_expr_obj.$(OBJEXT) ob_extra_tables_schema.$(OBJEXT) \
	ob_fetch_runnable.$(OBJEXT) ob_file.$(OBJEXT) \
	ob_file_client.$(OBJEXT) ob_file_service.$(OBJEXT) \
	ob_flag.$(OBJEXT) ob_get_param.$(OBJEXT) ob_groupby.$(OBJEXT) \
	ob_groupby_operator.$(OBJEXT) ob_hint.$(OBJEXT) \
	ob_infix_expression.$(OBJEXT) ob_lease_common.$(OBJEXT) \
	ob_lighty_queue.$(OBJEXT) ob_log_cursor.$(OBJEXT) \
	ob_log_dir_scanner.$(OBJEXT) ob_log_entry.$(OBJEXT) \
	ob_log_generator.$(OBJEXT) ob_log_reader.$(OBJEXT) \
	ob_log_replay_runnable.$(OBJEXT) ob_log_writer.$(OBJEXT) \
	ob_log_writer2.$(OBJEXT) ob_log_data_writer.$(OBJEXT) \
	ob_log_post.$(OBJEXT) ob_login_mgr.$(OBJEXT) \
	ob_malloc.$(OBJEXT) ob_memory_pool.$(OBJEXT) \
	ob_merger.$(OBJEXT) ob_meta_cache.$(OBJEXT) \
	ob_mod_define.$(OBJEXT) ob_ms_list.$(OBJEXT) \
	ob_mutator.$(OBJEXT) ob_mutator_helper.$(OBJEXT) \
	ob_mutex_task.$(OBJEXT) ob_new_scanner.$(OBJEXT) \
	ob_new_scanner_helper.$(OBJEXT) ob_number.$(OBJEXT) \
	ob_obi_role.$(OBJEXT) ob_obj_cast.$(OBJEXT) \
	ob_object.$(OBJEXT) ob_obj_type.$(OBJEXT) ob_packet.$(OBJEXT) \
	ob_packet_queue.$(OBJEXT) ob_packet_queue_thread.$(OBJEXT) \
	ob_perm_components.$(OBJEXT) ob_postfix_expression.$(OBJEXT) \
	ob_privilege.$(OBJEXT) ob_privilege_manager.$(OBJEXT) \
	ob_privilege_type.$(OBJEXT) ob_probability_random.$(OBJEXT) \
	ob_range.$(OBJEXT) ob_range2.$(OBJEXT) ob_raw_row.$(OBJEXT) \
	ob_record_header.$(OBJEXT) ob_record_header_v2.$(OBJEXT) \
	ob_regex.$(OBJEXT) ob_repeated_log_reader.$(OBJEXT) \
	ob_return_operator.$(OBJEXT) ob_ring_buffer.$(OBJEXT) \
	ob_row.$(OBJEXT) ob_row_compaction.$(OBJEXT) \
	ob_row_desc.$(OBJEXT) ob_row_desc_ext.$(OBJEXT) \
	ob_row_fuse.$(OBJEXT) ob_row_store.$(OBJEXT) \
	ob_row_util.$(OBJEXT) ob_rowkey.$(OBJEXT) \
	ob_rowkey_helper.$(OBJEXT) ob_rs_rs_message.$(OBJEXT) \
	ob_rs_ups_message.$(OBJEXT) ob_scan_param.$(OBJEXT) \
	ob_scanner.$(OBJEXT) ob_schema.$(OBJEXT) \
	ob_schema_helper.$(OBJEXT) ob_schema_manager.$(OBJEXT) \
	ob_schema_service.$(OBJEXT) ob_schema_service_impl.$(OBJEXT) \
	ob_schema_table.$(OBJEXT) \
	ob_secondary_index_service_impl.$(OBJEXT) \
	ob_seq_queue.$(OBJEXT) ob_server.$(OBJEXT) \
	ob_server_ext.$(OBJEXT) ob_server_getter.$(OBJEXT) \
	ob_session_mgr.$(OBJEXT) ob_shadow_server.$(OBJEXT) \
	ob_simple_condition.$(OBJEXT) ob_simple_filter.$(OBJEXT) \
	ob_single_log_reader.$(OBJEXT) ob_single_server.$(OBJEXT) \
	ob_slab.$(OBJEXT) ob_slave_mgr.$(OBJEXT) \
	ob_spop_spush_queue.$(OBJEXT) ob_tsi_utils.$(OBJEXT) \
	ob_stack_allocator.$(OBJEXT) ob_ack_queue.$(OBJEXT) \
	ob_ticket_queue.$(OBJEXT) ob_statistics.$(OBJEXT) \
	ob_common_stat.$(OBJEXT) ob_string_search.$(OBJEXT) \
	ob_strings.$(OBJEXT) ob_table_id_name.$(OBJEXT) \
	ob_tablet_info.$(OBJEXT) ob_tbnet_callback.$(OBJEXT) \
	ob_thread_mempool.$(OBJEXT) ob_timer.$(OBJEXT) \
	ob_token.$(OBJEXT) ob_trace_log.$(OBJEXT) \
	ob_tsi_factory.$(OBJEXT) ob_ups_info.$(OBJEXT) \
	ob_ups_row.$(OBJEXT) ob_ups_row_util.$(OBJEXT) \
	priority_packet_queue_thread.$(OBJEXT) thread_buffer.$(OBJEXT) \
	utility.$(OBJEXT) ob_rpc_stub.$(OBJEXT) \
	ob_general_rpc_stub.$(OBJEXT) ob_general_rpc_proxy.$(OBJEXT) \
	ob_tsi_block_allocator.$(OBJEXT) ob_pcap.$(OBJEXT) \
	ob_iterator_adaptor.$(OBJEXT) ob_transaction.$(OBJEXT) \
	ob_nb_accessor.$(OBJEXT) nb_scan_cond.$(OBJEXT) \
	nb_query_res.$(OBJEXT) ob_profile_log.$(OBJEXT) \
	ob_trace_id.$(OBJEXT) nb_table_row.$(OBJEXT) \
	ob_trigger_msg.$(OBJEXT) ob_trigger_event_util.$(OBJEXT) \
	ob_inner_table_operator.$(OBJEXT) \
	ob_encrypted_helper.$(OBJEXT) ob_server_config.$(OBJEXT) \
	ob_system_config.$(OBJEXT) ob_system_config_key.$(OBJEXT) \
	ob_config_manager.$(OBJEXT) ob_config.$(OBJEXT) \
	ob_config_helper.$(OBJEXT) ob_version.$(OBJEXT) \
	ob_profile_fill_log.$(OBJEXT) ob_queue_thread.$(OBJEXT) \
	ob_libonev_mem_pool.$(OBJEXT) ob_balance_filter.$(OBJEXT) \
	ob_data_source_desc.$(OBJEXT) ob_fifo_stream.$(OBJEXT) \
	ob_multi_wakeup.$(OBJEXT) ob_errno.$(OBJEXT) \
	Ob_Decimal.$(OBJEXT) ob_column_checksum.$(OBJEXT) \
	ob_index_black_list.$(OBJEXT) \
	ob_tablet_histogram_report_info.$(OBJEXT) \
	ob_tablet_histogram.$(OBJEXT) ob_log_generator2.$(OBJEXT) \
	ob_log_writer3.$(OBJEXT) ob_commit_queue.$(OBJEXT) \
	group_queue_thread.$(OBJEXT) ob_name_code_map.$(OBJEXT) \
	ob_buffer_size_define.$(OBJEXT)
am__objects_2 = ob_tablet_location_list.$(OBJEXT) \
	ob_tablet_location_cache_proxy.$(OBJEXT) \
	ob_tablet_location_range_iterator.$(OBJEXT) \
	ob_tablet_location_cache.$(OBJEXT)
am_libcommon_a_OBJECTS = $(am__objects_1) $(am__objects_2)
libcommon_a_OBJECTS = $(am_libcommon_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libcommon_a_SOURCES)
DIST_SOURCES = $(libcommon_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgdata_datadir)"
DATA = $(pkgdata_data_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/xsl/decimal_optimize/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CFLAGS = -g -O2 -D_OB_VERSION=400 -DCOMPATIBLE -D__USE_LARGEFILE64 -D_FILE_OFFSET_BITS=64	-D_LARGE_FILE -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -DNDEBUG	-finline-functions -fno-strict-aliasing -Werror -Wall
AM_CXXFLAGS = -g -O2 -D_OB_VERSION=400 -D_NO_EXCEPTION -finline-functions 	-D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG	-Wall -Werror -Wextra -Wunused-parameter -Wformat -fno-strict-aliasing 	-Wconversion -Wno-deprecated -D__USE_LARGEFILE64 -D_FILE_OFFSET_BITS=64 	-D_LARGE_FILE -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -Wno-ignored-qualifiers
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS = -lpthread -lc -lm -lrt -lcrypt -lssl -laio \
	$(am__append_2)
AR = ar
AUTOCONF = ${SHELL} /home/xsl/decimal_optimize/missing autoconf
AUTOHEADER = ${SHELL} /home/xsl/decimal_optimize/missing autoheader
AUTOMAKE = ${SHELL} /home/xsl/decimal_optimize/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  $(am__append_1)
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"OceanBase\" -DPACKAGE_TARNAME=\"oceanbase\" -DPACKAGE_VERSION=\"0.4.2.9\" -DPACKAGE_STRING=\"OceanBase\ 0.4.2.9\" -DPACKAGE_BUGREPORT=\"qushan@taobao.com\" -DPACKAGE_URL=\"http://oceanbase.taobao.org/\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DPACKAGE=\"oceanbase\" -DVERSION=\"0.4.2.9\" -DRELEASEID=\"\"
DEPDIR = .deps
DLLTOOL = false
DRC_ROOT = /home/ds
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/xsl/decimal_optimize/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
ONEV_LIB_PATH = /home/xsl/libonev/lib
ONEV_ROOT = /home/xsl/libonev
OTOOL = 
OTOOL64 = 
PACKAGE = oceanbase
PACKAGE_BUGREPORT = qushan@taobao.com
PACKAGE_NAME = OceanBase
PACKAGE_STRING = OceanBase 0.4.2.9
PACKAGE_TARNAME = oceanbase
PACKAGE_URL = http://oceanbase.taobao.org/
PACKAGE_VERSION = 0.4.2.9
PATH_SEPARATOR = :
RANLIB = ranlib
RELEASEID = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TBLIB_ROOT = /home/xsl/tb-common-utils
VERSION = 0.4.2.9
abs_builddir = /home/xsl/decimal_optimize/src/common
abs_srcdir = /home/xsl/decimal_optimize/src/common
abs_top_builddir = /home/xsl/decimal_optimize
abs_top_srcdir = /home/xsl/decimal_optimize
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/xsl/decimal_optimize/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mysvnversion = cat $(top_srcdir)/svn_dist_version
obapi_version = 1.0.0
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/xsl/oceanbase_chengxu
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
svnversioncommand = /usr/bin/svnversion
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS := $(AM_CPPFLAGS) -I${TBLIB_ROOT}/include/tbsys\
             -I${ONEV_ROOT}/include/onev\
             -I${top_srcdir}/include\
             -I${top_srcdir}/src\
             -fPIC

LDADD = ${ONEV_LIB_PATH}/libonev.a \
        ${TBLIB_ROOT}/lib/libtbsys.a \
        $(top_builddir)/src/common/btree/libbtree.a \
        ${top_builddir}/src/sql/libsql.a

noinst_LIBRARIES = libcommon.a
common_sources = \
  base_main.h                      base_main.cpp                        \
  batch_packet_queue_thread.h      batch_packet_queue_thread.cpp        \
  bloom_filter.h                   bloom_filter.cpp                     \
  check_sum.h                                                           \
  data_buffer.h                                                         \
  debug.h                                                               \
  ob_preload.h                                                               \
  gperf.h 								\
  dlist.h                          dlist.cpp                            \
  file_directory_utils.h           file_directory_utils.cpp             \
  file_utils.h                     file_utils.cpp                       \
  futex_sem.h                      futex_sem.cpp                        \
  hash/ob_hashmap.h                                                     \
  hash/ob_hashset.h                                                     \
  hash/ob_hashtable.h                                                   \
  hash/ob_hashutils.h                                                   \
  hash/ob_serialization.h                                               \
  hash/ob_placement_hashset.h                                           \
  hash/ob_placement_hashmap.h                                           \
	ob_fifo_allocator.h							 ob_fifo_allocator.cpp                \
	ob_id_map.h                                                           \
	ob_packet_lighty_queue.h         ob_packet_lighty_queue.cpp           \
	cmbtree/btree_base.h                                                  \
	cmbtree/btree_counter.h                                               \
	cmbtree/btree_default_alloc.h                                         \
	cmbtree/btree_define.h                                                \
	cmbtree/btree_handle.h                                                \
	cmbtree/btree_mem_pool.h                                              \
	cmbtree/btree_mutex.h                                                 \
	cmbtree/btree_node.h                                                  \
	cmbtree/btree_read_param.h                                            \
	cmbtree/btree_recycle_node.h                                          \
	cmbtree/btree_recycle_pool.h                                          \
	cmbtree/btree_thread_store.h                                          \
	cmbtree/btree_tid.h                                                   \
	cmbtree/btree_write_param.h                                           \
	cmbtree/qlock.h                                                       \
	cmbtree/thread.h                                                      \
  limit_array.h                                                         \
  murmur_hash.h                    murmur_hash.cpp                      \
  ob_action_flag.h                                                      \
  ob_iarray.h                                                           \
  ob_array.h                                                            \
  ob_array_helper.h                                                     \
  ob_array_lock.h                  ob_array_lock.cpp                    \
  ob_atomic.h                                                           \
  ob_atomic_type.h                                                      \
  ob_base_client.h                 ob_base_client.cpp                   \
  ob_base_server.h                 ob_base_server.cpp                   \
  ob_bit_set.h                                                          \
  ob_bitmap.h                                                           \
  ob_bloomfilter.h                                                      \
  ob_buffer.h                                                           \
  ob_bypass_task_info.h  ob_bypass_task_info.cpp \
	ob_buffer_helper.h                                                    \
  ob_cache.h                       ob_cache.cpp                         \
  ob_cached_allocator.h                                                 \
  ob_cell_array.h                  ob_cell_array.cpp                    \
  ob_cell_meta.h                                                        \
  ob_check_runnable.h              ob_check_runnable.cpp                \
  ob_cipher.h                                                           \
  ob_client_helper.h               ob_client_helper.cpp                 \
  ob_client_manager.h              ob_client_manager.cpp                \
  ob_client_proxy.h                ob_client_proxy.cpp                  \
  ob_client_wait_obj.h             ob_client_wait_obj.cpp               \
  ob_cluster_mgr.h                 ob_cluster_mgr.cpp                   \
  ob_column_filter.h                                                    \
  ob_common_param.h                ob_common_param.cpp                  \
  ob_common_rpc_stub.h             ob_common_rpc_stub.cpp               \
  ob_compact_cell_iterator.h       ob_compact_cell_iterator.cpp         \
  ob_compact_cell_util.h           ob_compact_cell_util.cpp             \
  ob_compact_cell_writer.h         ob_compact_cell_writer.cpp           \
  ob_compact_store_type.h                                               \
  ob_compose_operator.h            ob_compose_operator.cpp              \
  ob_composite_column.h            ob_composite_column.cpp              \
  ob_cond_info.h                   ob_cond_info.cpp                     \
  ob_counter.h                     ob_counter.cpp                       \
  ob_crc64.h                       ob_crc64.cpp                         \
  ob_cur_time.h                    ob_cur_time.cpp                      \
  ob_decimal_helper.h              ob_decimal_helper.cpp                \
  ob_define.h                                                           \
  ob_delay_guard.h                                                      \
  ob_direct_log_reader.h           ob_direct_log_reader.cpp             \
  ob_onev_array.h                                                       \
  ob_onev_log.h                    ob_onev_log.cpp                      \
  ob_election_role_mgr.h                                                \
  ob_encrypt.h                     ob_encrypt.cpp                       \
  ob_endian.h                                                           \
  ob_expr_obj.h                    ob_expr_obj.cpp                      \
  ob_expression.h                                                       \
  ob_extra_tables_schema.h         ob_extra_tables_schema.cpp           \
  ob_fetch_runnable.h              ob_fetch_runnable.cpp                \
  ob_file.h                        ob_file.cpp                          \
  ob_file_client.h                 ob_file_client.cpp                   \
  ob_file_service.h                ob_file_service.cpp                  \
  ob_fileinfo_manager.h                                                 \
  ob_fixed_queue.h                                                      \
  ob_single_pop_queue.h                                                 \
  ob_resource_pool.h                                                    \
  ob_flag.h                        ob_flag.cpp                          \
  ob_get_param.h                   ob_get_param.cpp                     \
  ob_groupby.h                     ob_groupby.cpp                       \
  ob_groupby_operator.h            ob_groupby_operator.cpp              \
  ob_hint.h                        ob_hint.cpp                          \
  ob_infix_expression.h            ob_infix_expression.cpp              \
  ob_iterator.h                                                         \
  ob_kv_storecache.h                                                    \
  ob_lease_common.h                ob_lease_common.cpp                  \
  ob_lighty_queue.h                ob_lighty_queue.cpp                  \
  ob_link.h                                                             \
  ob_list.h                                                             \
  ob_log_cursor.h                  ob_log_cursor.cpp                    \
  ob_log_dir_scanner.h             ob_log_dir_scanner.cpp               \
  ob_log_entry.h                   ob_log_entry.cpp                     \
  ob_log_generator.h               ob_log_generator.cpp                 \
  ob_log_reader.h                  ob_log_reader.cpp                    \
  ob_log_replay_runnable.h         ob_log_replay_runnable.cpp           \
  ob_log_writer.h                  ob_log_writer.cpp                    \
  ob_log_writer2.h                 ob_log_writer2.cpp                   \
  ob_log_data_writer.h                 ob_log_data_writer.cpp                   \
  ob_log_post.h                    ob_log_post.cpp                      \
  ob_login_mgr.h                   ob_login_mgr.cpp                     \
  ob_lrucache.h                                                         \
  ob_malloc.h                      ob_malloc.cpp                        \
  ob_memory_pool.h                 ob_memory_pool.cpp                   \
  ob_merger.h                      ob_merger.cpp                        \
  ob_meta_cache.h                  ob_meta_cache.cpp                    \
  ob_mod_define.h                  ob_mod_define.cpp                    \
  ob_ms_list.h                     ob_ms_list.cpp                       \
  ob_mutator.h                     ob_mutator.cpp                       \
  ob_mutator_helper.h              ob_mutator_helper.cpp                \
  ob_mutex_task.h                  ob_mutex_task.cpp                    \
  ob_new_scanner.h                 ob_new_scanner.cpp                   \
  ob_new_scanner_helper.h          ob_new_scanner_helper.cpp            \
  ob_number.h                      ob_number.cpp                        \
  ob_obi_role.h                    ob_obi_role.cpp                      \
  ob_obj_cast.h                    ob_obj_cast.cpp                      \
  ob_object.h                      ob_object.cpp                        \
  ob_obj_type.h                    ob_obj_type.cpp                      \
  ob_operate_result.h                                                   \
  ob_packet.h                      ob_packet.cpp                        \
  ob_packet_factory.h                                                   \
  ob_packet_queue.h                ob_packet_queue.cpp                  \
  ob_packet_queue_handler.h                                             \
  ob_packet_queue_thread.h         ob_packet_queue_thread.cpp           \
  ob_perm_components.h             ob_perm_components.cpp               \
  ob_pointer_array.h                                                    \
  ob_pool.h                        ob_pool.ipp                          \
  ob_pooled_allocator.h                          \
  ob_postfix_expression.h          ob_postfix_expression.cpp            \
  ob_privilege.h                   ob_privilege.cpp                     \
  ob_privilege_manager.h           ob_privilege_manager.cpp             \
  ob_privilege_type.h              ob_privilege_type.cpp                \
  ob_probability_random.h          ob_probability_random.cpp            \
  ob_range.h                       ob_range.cpp                         \
  ob_range2.h                      ob_range2.cpp                        \
  ob_raw_row.h                     ob_raw_row.cpp                       \
  ob_read_common_data.h                                                 \
  ob_record_header.h               ob_record_header.cpp                 \
	ob_record_header_v2.h            ob_record_header_v2.cpp              \
  ob_regex.h                       ob_regex.cpp                         \
  ob_repeated_log_reader.h         ob_repeated_log_reader.cpp           \
  ob_result.h                                                           \
  ob_return_operator.h             ob_return_operator.cpp               \
  ob_ring_buffer.h                 ob_ring_buffer.cpp                   \
  ob_role_mgr.h                                                         \
  ob_row.h                         ob_row.cpp                           \
  ob_row_compaction.h              ob_row_compaction.cpp                \
  ob_row_desc.h                    ob_row_desc.cpp                      \
  ob_row_desc_ext.h                ob_row_desc_ext.cpp                  \
  ob_row_fuse.h                    ob_row_fuse.cpp                      \
  ob_row_iterator.h                                                     \
  ob_row_store.h                   ob_row_store.cpp                     \
  ob_row_util.h                    ob_row_util.cpp                      \
  ob_rowkey.h                      ob_rowkey.cpp                        \
  ob_rowkey_helper.h               ob_rowkey_helper.cpp                 \
  ob_rs_rs_message.h               ob_rs_rs_message.cpp                 \
  ob_rs_ups_message.h              ob_rs_ups_message.cpp                \
  ob_scan_param.h                  ob_scan_param.cpp                    \
  ob_scanner.h                     ob_scanner.cpp                       \
  ob_schema.h                      ob_schema.cpp                        \
  ob_schema_helper.h               ob_schema_helper.cpp                 \
  ob_schema_manager.h              ob_schema_manager.cpp                \
  ob_schema_service.h              ob_schema_service.cpp                \
  ob_schema_service_impl.h         ob_schema_service_impl.cpp           \
  ob_schema_table.h                ob_schema_table.cpp                  \
  ob_secondary_index_service.h \
  ob_secondary_index_service_impl.h  ob_secondary_index_service_impl.cpp \
  ob_seq_queue.h                   ob_seq_queue.cpp                     \
  ob_server.h                      ob_server.cpp                        \
  ob_server_ext.h                  ob_server_ext.cpp                    \
  ob_server_getter.h               ob_server_getter.cpp                 \
  ob_session_mgr.h                 ob_session_mgr.cpp                   \
  ob_shadow_server.h               ob_shadow_server.cpp                 \
  ob_simple_condition.h            ob_simple_condition.cpp              \
  ob_simple_filter.h               ob_simple_filter.cpp                 \
  ob_simple_right_join_cell.h                                           \
  ob_simple_tpl.h                                                       \
  ob_single_log_reader.h           ob_single_log_reader.cpp             \
  ob_single_server.h               ob_single_server.cpp                 \
  ob_slab.h                        ob_slab.cpp                          \
  ob_slave_mgr.h                   ob_slave_mgr.cpp                     \
  ob_spin_lock.h                                                        \
  ob_recursive_mutex.h                                                  \
  ob_spin_rwlock.h                                                      \
  ob_spop_spush_queue.h            ob_spop_spush_queue.cpp              \
  ob_sql_ups_rpc_proxy.h                                                \
  ob_tsi_utils.h               ob_tsi_utils.cpp\
  ob_stack_allocator.h             ob_stack_allocator.cpp               \
  ob_queued_lock.h               \
  ob_wait_queue.h \
  ob_ack_queue.h             ob_ack_queue.cpp                           \
  ob_ticket_queue.h             ob_ticket_queue.cpp                     \
  ob_statistics.h                  ob_statistics.cpp                    \
  ob_common_stat.h                 ob_common_stat.cpp                   \
  ob_string.h                                                           \
  ob_string_buf.h                  ob_string_buf.ipp                    \
  ob_string_search.h               ob_string_search.cpp                 \
  ob_strings.h                     ob_strings.cpp                       \
  ob_switch.h                                                           \
  ob_table_id_name.h               ob_table_id_name.cpp                 \
  ob_tablet_info.h                 ob_tablet_info.cpp                   \
  ob_task.h                                                             \
  ob_tbnet_callback.h              ob_tbnet_callback.cpp                \
  ob_tc_counter.h                                                       \
  ob_thread_mempool.h              ob_thread_mempool.cpp                \
  ob_thread_objpool.h                                                   \
  ob_thread_store.h                                                     \
  ob_timer.h                       ob_timer.cpp                         \
	ob_tl_store.h                                                         \
  ob_token.h                       ob_token.cpp                         \
  ob_trace_log.h                   ob_trace_log.cpp                     \
  ob_tsi_factory.h                 ob_tsi_factory.cpp                   \
  ob_typed_queue.h                                                      \
  ob_ups_info.h                    ob_ups_info.cpp                      \
  ob_ups_row.h                     ob_ups_row.cpp                       \
  ob_ups_row_util.h                ob_ups_row_util.cpp                  \
  ob_ups_rpc_proxy.h                                                    \
  ob_vector.h                      ob_vector.ipp                        \
  page_arena.h                                                          \
  priority_packet_queue_thread.h   priority_packet_queue_thread.cpp     \
  ob_priority_scheduler.h                                               \
  qlock.h                                                               \
  serialization.h                                                       \
  thread_buffer.h                  thread_buffer.cpp                    \
  utility.h                        utility.cpp                          \
  ob_rpc_stub.h                    ob_rpc_stub.cpp                      \
  ob_general_rpc_stub.h            ob_general_rpc_stub.cpp              \
  ob_general_rpc_proxy.h           ob_general_rpc_proxy.cpp             \
  ob_tsi_block_allocator.h         ob_tsi_block_allocator.cpp           \
  ob_pcap.h         ob_pcap.cpp           \
  ob_iterator_adaptor.h            ob_iterator_adaptor.cpp              \
  ob_transaction.h                 ob_transaction.cpp                   \
  nb_accessor/ob_nb_accessor.h     nb_accessor/ob_nb_accessor.cpp       \
  nb_accessor/nb_scan_cond.h       nb_accessor/nb_scan_cond.cpp         \
  nb_accessor/nb_query_res.h       nb_accessor/nb_query_res.cpp         \
	ob_profile_log.h								 ob_profile_log.cpp										\
	ob_trace_id.h										 ob_trace_id.cpp                      \
	ob_profile_type.h                                                     \
  nb_accessor/nb_table_row.h       nb_accessor/nb_table_row.cpp         \
  ob_allocator.h                                                        \
  ob_schema_macro_define.h                                              \
  ob_cellinfo_processor.h                                               \
  ob_chunk_server_item.h                                                \
	ob_trigger_msg.h                 ob_trigger_msg.cpp                   \
	ob_trigger_event.h                                                    \
  ob_trigger_event_util.h          ob_trigger_event_util.cpp            \
  ob_inner_table_operator.h        ob_inner_table_operator.cpp          \
  ob_cluster_server.h\
  ob_rpc_macros.h\
	ob_encrypted_helper.h	ob_encrypted_helper.cpp\
  ob_se_array.h \
  ob_server_config.h                 ob_server_config.cpp \
  ob_system_config.h                 ob_system_config.cpp	\
  ob_system_config_key.h             ob_system_config_key.cpp	\
  ob_system_config_value.h					\
  ob_config_manager.h                ob_config_manager.cpp      \
  ob_config.h                        ob_config.cpp              \
  ob_config_helper.h                 ob_config_helper.cpp       \
	ob_version.h											 ob_version.cpp\
	ob_profile_fill_log.h              ob_profile_fill_log.cpp\
	ob_request_profile_data.h\
  ob_queue_thread.h                  ob_queue_thread.cpp\
	ob_libonev_mem_pool.h              ob_libonev_mem_pool.cpp\
	ob_balance_filter.h								 ob_balance_filter.cpp\
	ob_adapter_allocator.h\
	ob_reload_config.h\
	ob_obj_pool.h \
	ob_data_source_desc.h              ob_data_source_desc.cpp \
         ob_tc_factory.h\
	ob_fifo_stream.h									 ob_fifo_stream.cpp \
	ob_multi_wakeup.h									 ob_multi_wakeup.cpp \
	ob_global_factory.h\
  ob_errno.h ob_errno.cpp\
Ob_Decimal.h	Ob_Decimal.cpp\
  ttmathint.h	ttmathmisc.h	ttmathuint.h	ttmathuint_noasm.h	ttmathuint_x86_64.h	ttmathuint_x86.h ttmathtypes.h \
  ob_column_checksum.h               ob_column_checksum.cpp\
	ob_index_black_list.h              ob_index_black_list.cpp\
  ob_tablet_histogram_report_info.h  ob_tablet_histogram_report_info.cpp\
  ob_tablet_histogram.h              ob_tablet_histogram.cpp\
  ob_log_generator2.h	ob_log_generator2.cpp\
  ob_log_writer3.h	ob_log_writer3.cpp\
  ob_commit_queue.h	ob_commit_queue.cpp\
  group_queue_thread.h	group_queue_thread.cpp\
  ob_name_code_map.h     ob_name_code_map.cpp  \
  ob_buffer_size_define.h  ob_buffer_size_define.cpp

location_sources = \
  location/ob_ms_cache_table.h    location/ob_btree_map.h                                     \
  location/ob_tablet_location_list.h   location/ob_tablet_location_list.cpp                   \
  location/ob_tablet_location_cache_proxy.h   location/ob_tablet_location_cache_proxy.cpp     \
  location/ob_tablet_location_range_iterator.h location/ob_tablet_location_range_iterator.cpp \
  location/ob_tablet_location_cache.h  location/ob_tablet_location_cache.cpp

libcommon_a_SOURCES = ${common_sources} ${location_sources}

#bin_PROGRAMS=test
#test_SOURCES=test.cpp
#test_LDFLAGS=libcommon.a -lpthread -lc -lm  -lrt -lcrypt -lssl -laio #-pg
SUBDIRS = btree compress roottable timezone
DIST_SUBDIRS = btree compress roottable timezone
EXTRA_DIST = ob_define.h
pkgdata_data_DATA = ob_define.h
pkgdata_datadir = ${prefix}/include
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/common/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/common/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libcommon.a: $(libcommon_a_OBJECTS) $(libcommon_a_DEPENDENCIES) $(EXTRA_libcommon_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcommon.a
	$(AM_V_AR)$(libcommon_a_AR) libcommon.a $(libcommon_a_OBJECTS) $(libcommon_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcommon.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Ob_Decimal.Po
include ./$(DEPDIR)/base_main.Po
include ./$(DEPDIR)/batch_packet_queue_thread.Po
include ./$(DEPDIR)/bloom_filter.Po
include ./$(DEPDIR)/dlist.Po
include ./$(DEPDIR)/file_directory_utils.Po
include ./$(DEPDIR)/file_utils.Po
include ./$(DEPDIR)/futex_sem.Po
include ./$(DEPDIR)/group_queue_thread.Po
include ./$(DEPDIR)/murmur_hash.Po
include ./$(DEPDIR)/nb_query_res.Po
include ./$(DEPDIR)/nb_scan_cond.Po
include ./$(DEPDIR)/nb_table_row.Po
include ./$(DEPDIR)/ob_ack_queue.Po
include ./$(DEPDIR)/ob_array_lock.Po
include ./$(DEPDIR)/ob_balance_filter.Po
include ./$(DEPDIR)/ob_base_client.Po
include ./$(DEPDIR)/ob_base_server.Po
include ./$(DEPDIR)/ob_buffer_size_define.Po
include ./$(DEPDIR)/ob_bypass_task_info.Po
include ./$(DEPDIR)/ob_cache.Po
include ./$(DEPDIR)/ob_cell_array.Po
include ./$(DEPDIR)/ob_check_runnable.Po
include ./$(DEPDIR)/ob_client_helper.Po
include ./$(DEPDIR)/ob_client_manager.Po
include ./$(DEPDIR)/ob_client_proxy.Po
include ./$(DEPDIR)/ob_client_wait_obj.Po
include ./$(DEPDIR)/ob_cluster_mgr.Po
include ./$(DEPDIR)/ob_column_checksum.Po
include ./$(DEPDIR)/ob_commit_queue.Po
include ./$(DEPDIR)/ob_common_param.Po
include ./$(DEPDIR)/ob_common_rpc_stub.Po
include ./$(DEPDIR)/ob_common_stat.Po
include ./$(DEPDIR)/ob_compact_cell_iterator.Po
include ./$(DEPDIR)/ob_compact_cell_util.Po
include ./$(DEPDIR)/ob_compact_cell_writer.Po
include ./$(DEPDIR)/ob_compose_operator.Po
include ./$(DEPDIR)/ob_composite_column.Po
include ./$(DEPDIR)/ob_cond_info.Po
include ./$(DEPDIR)/ob_config.Po
include ./$(DEPDIR)/ob_config_helper.Po
include ./$(DEPDIR)/ob_config_manager.Po
include ./$(DEPDIR)/ob_counter.Po
include ./$(DEPDIR)/ob_crc64.Po
include ./$(DEPDIR)/ob_cur_time.Po
include ./$(DEPDIR)/ob_data_source_desc.Po
include ./$(DEPDIR)/ob_decimal_helper.Po
include ./$(DEPDIR)/ob_direct_log_reader.Po
include ./$(DEPDIR)/ob_encrypt.Po
include ./$(DEPDIR)/ob_encrypted_helper.Po
include ./$(DEPDIR)/ob_errno.Po
include ./$(DEPDIR)/ob_expr_obj.Po
include ./$(DEPDIR)/ob_extra_tables_schema.Po
include ./$(DEPDIR)/ob_fetch_runnable.Po
include ./$(DEPDIR)/ob_fifo_allocator.Po
include ./$(DEPDIR)/ob_fifo_stream.Po
include ./$(DEPDIR)/ob_file.Po
include ./$(DEPDIR)/ob_file_client.Po
include ./$(DEPDIR)/ob_file_service.Po
include ./$(DEPDIR)/ob_flag.Po
include ./$(DEPDIR)/ob_general_rpc_proxy.Po
include ./$(DEPDIR)/ob_general_rpc_stub.Po
include ./$(DEPDIR)/ob_get_param.Po
include ./$(DEPDIR)/ob_groupby.Po
include ./$(DEPDIR)/ob_groupby_operator.Po
include ./$(DEPDIR)/ob_hint.Po
include ./$(DEPDIR)/ob_index_black_list.Po
include ./$(DEPDIR)/ob_infix_expression.Po
include ./$(DEPDIR)/ob_inner_table_operator.Po
include ./$(DEPDIR)/ob_iterator_adaptor.Po
include ./$(DEPDIR)/ob_lease_common.Po
include ./$(DEPDIR)/ob_libonev_mem_pool.Po
include ./$(DEPDIR)/ob_lighty_queue.Po
include ./$(DEPDIR)/ob_log_cursor.Po
include ./$(DEPDIR)/ob_log_data_writer.Po
include ./$(DEPDIR)/ob_log_dir_scanner.Po
include ./$(DEPDIR)/ob_log_entry.Po
include ./$(DEPDIR)/ob_log_generator.Po
include ./$(DEPDIR)/ob_log_generator2.Po
include ./$(DEPDIR)/ob_log_post.Po
include ./$(DEPDIR)/ob_log_reader.Po
include ./$(DEPDIR)/ob_log_replay_runnable.Po
include ./$(DEPDIR)/ob_log_writer.Po
include ./$(DEPDIR)/ob_log_writer2.Po
include ./$(DEPDIR)/ob_log_writer3.Po
include ./$(DEPDIR)/ob_login_mgr.Po
include ./$(DEPDIR)/ob_malloc.Po
include ./$(DEPDIR)/ob_memory_pool.Po
include ./$(DEPDIR)/ob_merger.Po
include ./$(DEPDIR)/ob_meta_cache.Po
include ./$(DEPDIR)/ob_mod_define.Po
include ./$(DEPDIR)/ob_ms_list.Po
include ./$(DEPDIR)/ob_multi_wakeup.Po
include ./$(DEPDIR)/ob_mutator.Po
include ./$(DEPDIR)/ob_mutator_helper.Po
include ./$(DEPDIR)/ob_mutex_task.Po
include ./$(DEPDIR)/ob_name_code_map.Po
include ./$(DEPDIR)/ob_nb_accessor.Po
include ./$(DEPDIR)/ob_new_scanner.Po
include ./$(DEPDIR)/ob_new_scanner_helper.Po
include ./$(DEPDIR)/ob_number.Po
include ./$(DEPDIR)/ob_obi_role.Po
include ./$(DEPDIR)/ob_obj_cast.Po
include ./$(DEPDIR)/ob_obj_type.Po
include ./$(DEPDIR)/ob_object.Po
include ./$(DEPDIR)/ob_onev_log.Po
include ./$(DEPDIR)/ob_packet.Po
include ./$(DEPDIR)/ob_packet_lighty_queue.Po
include ./$(DEPDIR)/ob_packet_queue.Po
include ./$(DEPDIR)/ob_packet_queue_thread.Po
include ./$(DEPDIR)/ob_pcap.Po
include ./$(DEPDIR)/ob_perm_components.Po
include ./$(DEPDIR)/ob_postfix_expression.Po
include ./$(DEPDIR)/ob_privilege.Po
include ./$(DEPDIR)/ob_privilege_manager.Po
include ./$(DEPDIR)/ob_privilege_type.Po
include ./$(DEPDIR)/ob_probability_random.Po
include ./$(DEPDIR)/ob_profile_fill_log.Po
include ./$(DEPDIR)/ob_profile_log.Po
include ./$(DEPDIR)/ob_queue_thread.Po
include ./$(DEPDIR)/ob_range.Po
include ./$(DEPDIR)/ob_range2.Po
include ./$(DEPDIR)/ob_raw_row.Po
include ./$(DEPDIR)/ob_record_header.Po
include ./$(DEPDIR)/ob_record_header_v2.Po
include ./$(DEPDIR)/ob_regex.Po
include ./$(DEPDIR)/ob_repeated_log_reader.Po
include ./$(DEPDIR)/ob_return_operator.Po
include ./$(DEPDIR)/ob_ring_buffer.Po
include ./$(DEPDIR)/ob_row.Po
include ./$(DEPDIR)/ob_row_compaction.Po
include ./$(DEPDIR)/ob_row_desc.Po
include ./$(DEPDIR)/ob_row_desc_ext.Po
include ./$(DEPDIR)/ob_row_fuse.Po
include ./$(DEPDIR)/ob_row_store.Po
include ./$(DEPDIR)/ob_row_util.Po
include ./$(DEPDIR)/ob_rowkey.Po
include ./$(DEPDIR)/ob_rowkey_helper.Po
include ./$(DEPDIR)/ob_rpc_stub.Po
include ./$(DEPDIR)/ob_rs_rs_message.Po
include ./$(DEPDIR)/ob_rs_ups_message.Po
include ./$(DEPDIR)/ob_scan_param.Po
include ./$(DEPDIR)/ob_scanner.Po
include ./$(DEPDIR)/ob_schema.Po
include ./$(DEPDIR)/ob_schema_helper.Po
include ./$(DEPDIR)/ob_schema_manager.Po
include ./$(DEPDIR)/ob_schema_service.Po
include ./$(DEPDIR)/ob_schema_service_impl.Po
include ./$(DEPDIR)/ob_schema_table.Po
include ./$(DEPDIR)/ob_secondary_index_service_impl.Po
include ./$(DEPDIR)/ob_seq_queue.Po
include ./$(DEPDIR)/ob_server.Po
include ./$(DEPDIR)/ob_server_config.Po
include ./$(DEPDIR)/ob_server_ext.Po
include ./$(DEPDIR)/ob_server_getter.Po
include ./$(DEPDIR)/ob_session_mgr.Po
include ./$(DEPDIR)/ob_shadow_server.Po
include ./$(DEPDIR)/ob_simple_condition.Po
include ./$(DEPDIR)/ob_simple_filter.Po
include ./$(DEPDIR)/ob_single_log_reader.Po
include ./$(DEPDIR)/ob_single_server.Po
include ./$(DEPDIR)/ob_slab.Po
include ./$(DEPDIR)/ob_slave_mgr.Po
include ./$(DEPDIR)/ob_spop_spush_queue.Po
include ./$(DEPDIR)/ob_stack_allocator.Po
include ./$(DEPDIR)/ob_statistics.Po
include ./$(DEPDIR)/ob_string_search.Po
include ./$(DEPDIR)/ob_strings.Po
include ./$(DEPDIR)/ob_system_config.Po
include ./$(DEPDIR)/ob_system_config_key.Po
include ./$(DEPDIR)/ob_table_id_name.Po
include ./$(DEPDIR)/ob_tablet_histogram.Po
include ./$(DEPDIR)/ob_tablet_histogram_report_info.Po
include ./$(DEPDIR)/ob_tablet_info.Po
include ./$(DEPDIR)/ob_tablet_location_cache.Po
include ./$(DEPDIR)/ob_tablet_location_cache_proxy.Po
include ./$(DEPDIR)/ob_tablet_location_list.Po
include ./$(DEPDIR)/ob_tablet_location_range_iterator.Po
include ./$(DEPDIR)/ob_tbnet_callback.Po
include ./$(DEPDIR)/ob_thread_mempool.Po
include ./$(DEPDIR)/ob_ticket_queue.Po
include ./$(DEPDIR)/ob_timer.Po
include ./$(DEPDIR)/ob_token.Po
include ./$(DEPDIR)/ob_trace_id.Po
include ./$(DEPDIR)/ob_trace_log.Po
include ./$(DEPDIR)/ob_transaction.Po
include ./$(DEPDIR)/ob_trigger_event_util.Po
include ./$(DEPDIR)/ob_trigger_msg.Po
include ./$(DEPDIR)/ob_tsi_block_allocator.Po
include ./$(DEPDIR)/ob_tsi_factory.Po
include ./$(DEPDIR)/ob_tsi_utils.Po
include ./$(DEPDIR)/ob_ups_info.Po
include ./$(DEPDIR)/ob_ups_row.Po
include ./$(DEPDIR)/ob_ups_row_util.Po
include ./$(DEPDIR)/ob_version.Po
include ./$(DEPDIR)/priority_packet_queue_thread.Po
include ./$(DEPDIR)/thread_buffer.Po
include ./$(DEPDIR)/utility.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

ob_nb_accessor.o: nb_accessor/ob_nb_accessor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_nb_accessor.o -MD -MP -MF $(DEPDIR)/ob_nb_accessor.Tpo -c -o ob_nb_accessor.o `test -f 'nb_accessor/ob_nb_accessor.cpp' || echo '$(srcdir)/'`nb_accessor/ob_nb_accessor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_nb_accessor.Tpo $(DEPDIR)/ob_nb_accessor.Po
#	$(AM_V_CXX)source='nb_accessor/ob_nb_accessor.cpp' object='ob_nb_accessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_nb_accessor.o `test -f 'nb_accessor/ob_nb_accessor.cpp' || echo '$(srcdir)/'`nb_accessor/ob_nb_accessor.cpp

ob_nb_accessor.obj: nb_accessor/ob_nb_accessor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_nb_accessor.obj -MD -MP -MF $(DEPDIR)/ob_nb_accessor.Tpo -c -o ob_nb_accessor.obj `if test -f 'nb_accessor/ob_nb_accessor.cpp'; then $(CYGPATH_W) 'nb_accessor/ob_nb_accessor.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/ob_nb_accessor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_nb_accessor.Tpo $(DEPDIR)/ob_nb_accessor.Po
#	$(AM_V_CXX)source='nb_accessor/ob_nb_accessor.cpp' object='ob_nb_accessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_nb_accessor.obj `if test -f 'nb_accessor/ob_nb_accessor.cpp'; then $(CYGPATH_W) 'nb_accessor/ob_nb_accessor.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/ob_nb_accessor.cpp'; fi`

nb_scan_cond.o: nb_accessor/nb_scan_cond.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_scan_cond.o -MD -MP -MF $(DEPDIR)/nb_scan_cond.Tpo -c -o nb_scan_cond.o `test -f 'nb_accessor/nb_scan_cond.cpp' || echo '$(srcdir)/'`nb_accessor/nb_scan_cond.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/nb_scan_cond.Tpo $(DEPDIR)/nb_scan_cond.Po
#	$(AM_V_CXX)source='nb_accessor/nb_scan_cond.cpp' object='nb_scan_cond.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_scan_cond.o `test -f 'nb_accessor/nb_scan_cond.cpp' || echo '$(srcdir)/'`nb_accessor/nb_scan_cond.cpp

nb_scan_cond.obj: nb_accessor/nb_scan_cond.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_scan_cond.obj -MD -MP -MF $(DEPDIR)/nb_scan_cond.Tpo -c -o nb_scan_cond.obj `if test -f 'nb_accessor/nb_scan_cond.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_scan_cond.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_scan_cond.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nb_scan_cond.Tpo $(DEPDIR)/nb_scan_cond.Po
#	$(AM_V_CXX)source='nb_accessor/nb_scan_cond.cpp' object='nb_scan_cond.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_scan_cond.obj `if test -f 'nb_accessor/nb_scan_cond.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_scan_cond.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_scan_cond.cpp'; fi`

nb_query_res.o: nb_accessor/nb_query_res.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_query_res.o -MD -MP -MF $(DEPDIR)/nb_query_res.Tpo -c -o nb_query_res.o `test -f 'nb_accessor/nb_query_res.cpp' || echo '$(srcdir)/'`nb_accessor/nb_query_res.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/nb_query_res.Tpo $(DEPDIR)/nb_query_res.Po
#	$(AM_V_CXX)source='nb_accessor/nb_query_res.cpp' object='nb_query_res.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_query_res.o `test -f 'nb_accessor/nb_query_res.cpp' || echo '$(srcdir)/'`nb_accessor/nb_query_res.cpp

nb_query_res.obj: nb_accessor/nb_query_res.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_query_res.obj -MD -MP -MF $(DEPDIR)/nb_query_res.Tpo -c -o nb_query_res.obj `if test -f 'nb_accessor/nb_query_res.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_query_res.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_query_res.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nb_query_res.Tpo $(DEPDIR)/nb_query_res.Po
#	$(AM_V_CXX)source='nb_accessor/nb_query_res.cpp' object='nb_query_res.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_query_res.obj `if test -f 'nb_accessor/nb_query_res.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_query_res.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_query_res.cpp'; fi`

nb_table_row.o: nb_accessor/nb_table_row.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_table_row.o -MD -MP -MF $(DEPDIR)/nb_table_row.Tpo -c -o nb_table_row.o `test -f 'nb_accessor/nb_table_row.cpp' || echo '$(srcdir)/'`nb_accessor/nb_table_row.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/nb_table_row.Tpo $(DEPDIR)/nb_table_row.Po
#	$(AM_V_CXX)source='nb_accessor/nb_table_row.cpp' object='nb_table_row.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_table_row.o `test -f 'nb_accessor/nb_table_row.cpp' || echo '$(srcdir)/'`nb_accessor/nb_table_row.cpp

nb_table_row.obj: nb_accessor/nb_table_row.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_table_row.obj -MD -MP -MF $(DEPDIR)/nb_table_row.Tpo -c -o nb_table_row.obj `if test -f 'nb_accessor/nb_table_row.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_table_row.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_table_row.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nb_table_row.Tpo $(DEPDIR)/nb_table_row.Po
#	$(AM_V_CXX)source='nb_accessor/nb_table_row.cpp' object='nb_table_row.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_table_row.obj `if test -f 'nb_accessor/nb_table_row.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_table_row.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_table_row.cpp'; fi`

ob_tablet_location_list.o: location/ob_tablet_location_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_list.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_list.Tpo -c -o ob_tablet_location_list.o `test -f 'location/ob_tablet_location_list.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_list.Tpo $(DEPDIR)/ob_tablet_location_list.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_list.cpp' object='ob_tablet_location_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_list.o `test -f 'location/ob_tablet_location_list.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_list.cpp

ob_tablet_location_list.obj: location/ob_tablet_location_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_list.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_list.Tpo -c -o ob_tablet_location_list.obj `if test -f 'location/ob_tablet_location_list.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_list.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_list.Tpo $(DEPDIR)/ob_tablet_location_list.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_list.cpp' object='ob_tablet_location_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_list.obj `if test -f 'location/ob_tablet_location_list.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_list.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_list.cpp'; fi`

ob_tablet_location_cache_proxy.o: location/ob_tablet_location_cache_proxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache_proxy.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo -c -o ob_tablet_location_cache_proxy.o `test -f 'location/ob_tablet_location_cache_proxy.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache_proxy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo $(DEPDIR)/ob_tablet_location_cache_proxy.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_cache_proxy.cpp' object='ob_tablet_location_cache_proxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache_proxy.o `test -f 'location/ob_tablet_location_cache_proxy.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache_proxy.cpp

ob_tablet_location_cache_proxy.obj: location/ob_tablet_location_cache_proxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache_proxy.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo -c -o ob_tablet_location_cache_proxy.obj `if test -f 'location/ob_tablet_location_cache_proxy.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache_proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache_proxy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo $(DEPDIR)/ob_tablet_location_cache_proxy.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_cache_proxy.cpp' object='ob_tablet_location_cache_proxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache_proxy.obj `if test -f 'location/ob_tablet_location_cache_proxy.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache_proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache_proxy.cpp'; fi`

ob_tablet_location_range_iterator.o: location/ob_tablet_location_range_iterator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_range_iterator.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_range_iterator.Tpo -c -o ob_tablet_location_range_iterator.o `test -f 'location/ob_tablet_location_range_iterator.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_range_iterator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_range_iterator.Tpo $(DEPDIR)/ob_tablet_location_range_iterator.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_range_iterator.cpp' object='ob_tablet_location_range_iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_range_iterator.o `test -f 'location/ob_tablet_location_range_iterator.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_range_iterator.cpp

ob_tablet_location_range_iterator.obj: location/ob_tablet_location_range_iterator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_range_iterator.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_range_iterator.Tpo -c -o ob_tablet_location_range_iterator.obj `if test -f 'location/ob_tablet_location_range_iterator.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_range_iterator.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_range_iterator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_range_iterator.Tpo $(DEPDIR)/ob_tablet_location_range_iterator.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_range_iterator.cpp' object='ob_tablet_location_range_iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_range_iterator.obj `if test -f 'location/ob_tablet_location_range_iterator.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_range_iterator.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_range_iterator.cpp'; fi`

ob_tablet_location_cache.o: location/ob_tablet_location_cache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache.Tpo -c -o ob_tablet_location_cache.o `test -f 'location/ob_tablet_location_cache.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_cache.Tpo $(DEPDIR)/ob_tablet_location_cache.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_cache.cpp' object='ob_tablet_location_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache.o `test -f 'location/ob_tablet_location_cache.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache.cpp

ob_tablet_location_cache.obj: location/ob_tablet_location_cache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache.Tpo -c -o ob_tablet_location_cache.obj `if test -f 'location/ob_tablet_location_cache.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ob_tablet_location_cache.Tpo $(DEPDIR)/ob_tablet_location_cache.Po
#	$(AM_V_CXX)source='location/ob_tablet_location_cache.cpp' object='ob_tablet_location_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache.obj `if test -f 'location/ob_tablet_location_cache.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgdata_dataDATA: $(pkgdata_data_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgdata_data_DATA)'; test -n "$(pkgdata_datadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdata_datadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdata_datadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdata_datadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdata_datadir)" || exit $$?; \
	done

uninstall-pkgdata_dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_data_DATA)'; test -n "$(pkgdata_datadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdata_datadir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgdata_datadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgdata_dataDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-pkgdata_dataDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkgdata_dataDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-pkgdata_dataDATA

.PRECIOUS: Makefile


clean-local:
	-rm -f *.gcov *.gcno *.gcda

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
